plugins {
    id "java"
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id "com.vaadin" version "$vaadinPluginVersion"
    id "org.springframework.boot" version "$springBootVersion"
    id "io.spring.dependency-management" version "$springDependencyManagementVersion"
    id "me.qoomon.git-versioning" version "$gitVersioningVersion"
    id "org.sonarqube" version "3.1.1"
}

description "Stefans Smart Home WebApp"
group "de.stefan_oltmann.smarthome.webapp"
version "0.0.0"

sonarqube {
  properties {
    property "sonar.projectKey", "StefanOltmann_smart-home-webapp"
    property "sonar.organization", "stefanoltmann"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}

gitVersioning.apply {
    branch {
        pattern = 'master'
        versionFormat = '${commit.short}'
    }
    tag {
        pattern = 'v(?<tagVersion>[0-9].*)'
        versionFormat = '${tagVersion}'
    }
}

defaultTasks("clean", "build")

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
    }
}

vaadin {
    pnpmEnable = true
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    // Spring Boot
    implementation 'com.vaadin:vaadin-spring-boot-starter'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.h2database:h2'

    // Spring Security
    implementation 'org.springframework.security:spring-security-web'
    implementation 'org.springframework.security:spring-security-config'

    // REST API Calls
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Unit Tests
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}
